services:
  certbot:
    image: certbot/certbot
    volumes:
      - ./nginx/certs:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: renew
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - digit_docker_network
  nginx:
    image: nginx:latest
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro
    depends_on:
      - portainer
      - homeassistant
    networks:
      digit_isolated:
      digit_docker_network:
        ipv4_address: 172.1.0.200

  portainer:
    image: portainer/portainer-ce:latest
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9443:9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - digit_docker_network

  homeassistant:
    image: "ghcr.io/home-assistant/home-assistant:stable"
    restart: unless-stopped
    volumes:
      - ./homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
    privileged: true
    networks:
      - digit_docker_network

  qbittorent:
    image: lscr.io/linuxserver/qbittorrent:latest
    restart: unless-stopped
    ports:
      - 8080:8080
      - 49500:49500
      - 49500:49500/udp
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - WEBUI_PORT=8080
      - TORRENTING_PORT=49500
    volumes:
      - ./qbittorrent/appdata:/config
      - ./qbittorrent/downloads:/downloads
      - type: bind
        source: /media/samsung/downloads
        target: /downloads/external
    networks:
      - digit_vpn_vlan
      - digit_isolated

  jellyfin:
    image: jellyfin/jellyfin
    restart: unless-stopped
    network_mode: 'host'
    devices:
      - /dev/dri:/dev/dri
    environment:
      - PUID=1000
      - PGID=1000
      - JELLYFIN_HWACCEL_ARGS=vaapi
      - DOCKER_MODS=linuxserver/mods:jellyfin-opencl-intel
    volumes:
      - ./jellyfin/config:/config
      - ./jellyfin/cache:/cache
      - type: bind
        source: /home/roqueo/media/movies
        target: /media/movies
      - type: bind
        source: /home/roqueo/media/shows
        target: /media/shows
      - type: bind
        source: /media/samsung/jellyfin/movies
        target: /media/external/movies
      - type: bind
        source: /media/samsung/jellyfin/shows
        target: /media/external/shows
      #- type: bind
      #  source: /path/to/media2
      #  target: /media2
      #  read_only: true
    # Optional - may be necessary for docker healthcheck to pass if running in host network mode
    extra_hosts:
      - 'host.docker.internal:host-gateway' 
  
  mealie:
    image: ghcr.io/mealie-recipes/mealie:v1.8.0 # 
    restart: unless-stopped
    ports:
        - "9925:9000" # 
    deploy:
      resources:
        limits:
          memory: 1000M # 
    networks:
      - digit_docker_network
    volumes:
      - mealie-data:/app/data/
    environment:
      # Set Backend ENV Variables Here
      ALLOW_SIGNUP: true
      PUID: 1000
      PGID: 1000
      TZ: America/Vancouver
      MAX_WORKERS: 1
      WEB_CONCURRENCY: 1
      #BASE_URL: https://mealie.yourdomain.com

  omada-controller:
    image: mbentley/omada-controller:5.13
    restart: unless-stopped
    ulimits:
      nofile:
        soft: 4096
        hard: 8192
    stop_grace_period: 60s
    network_mode: host
    environment:
      - PUID=508
      - PGID=508
      - MANAGE_HTTP_PORT=8088
      - MANAGE_HTTPS_PORT=8043
      - PORTAL_HTTP_PORT=8088
      - PORTAL_HTTPS_PORT=8843
      - PORT_APP_DISCOVERY=27001
      - PORT_ADOPT_V1=29812
      - PORT_UPGRADE_V1=29813
      - PORT_MANAGER_V1=29811
      - PORT_MANAGER_V2=29814
      - PORT_DISCOVERY=29810
      - PORT_TRANSFER_V2=29815
      - PORT_RTTY=29816
      - SHOW_SERVER_LOGS=true
      - SHOW_MONGODB_LOGS=false
      - SSL_CERT_NAME=tls.crt
      - SSL_KEY_NAME=tls.key
      - TZ=Etc/UTC
    volumes:
      - omada-data:/opt/tplink/EAPController/data
      - omada-logs:/opt/tplink/EAPController/logs

  grafana:
    image: grafana/grafana-enterprise:latest
    restart: unless-stopped
    ports: 
      - "3000:3000"
    networks:
      - digit_docker_network
    volumes:
      - grafana-storage:/var/lib/grafana

  couchdb:
    image: couchdb:latest
    container_name: obsidian-livesync
    user: 1000:1000
    environment:
      - COUCHDB_USER=roqueo
      - COUCHDB_PASSWORD=XFXTigger14
      - PUID=1000
      - PGID=1000
    volumes:
      - couchdb-obsidian:/opt/couchdb/data
    ports:
      - 5984:5984
    restart: unless-stopped
    networks:
      - digit_docker_network

  openwebui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    ports:
      - "4000:8080"
    volumes:
      - open-webui:/app/backend/data
    restart: unless-stopped
    networks:
      - digit_docker_network

volumes:
  portainer_data:
  mealie-data:
  omada-data:
  omada-logs:
  grafana-storage:
  couchdb-obsidian:
  open-webui:

networks:
  digit_docker_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.1.0.0/24

  digit_vpn_vlan:
    driver: macvlan
    driver_opts:
      parent: eno1.20
    ipam:
      config:
        - subnet: 192.168.3.0/24
          ip_range: 192.168.3.96/30
          gateway: 192.168.3.1

  digit_isolated:
    driver: bridge
    internal: true
    ipam:
      config:
        - subnet: 172.20.0.0/24
